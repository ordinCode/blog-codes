plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.moowork.node' version '1.3.1'
}

group = 'blog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.4.5'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.4.4'
    implementation group: 'com.h2database', name: 'h2', version: '1.4.200'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

//빌드시 vue프로젝트가 먼저 빌드되도록
node {
    workDir = file("./vue-project")
    npmWorkDir = file("./vue-project")
    nodeModulesDir = file("./vue-project")
}

task setUp(type: NpmTask) {
    description = "Install Node.js Package"
    args = ['install']
}

task buildFrontEnd(type: NpmTask, dependsOn: setUp) {
    description = "Build vue.js"
    args = ['run', 'build']
}

task copyIndex(type: Copy, dependsOn: buildFrontEnd) {
    description = "copy index.html"
    from "./src/main/resources/dist/index.html"
    into "./src/main/resources/templates"
}

processResources.dependsOn 'copyIndex'

